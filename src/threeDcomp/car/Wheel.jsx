/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 wheel.gltf 
*/

import { forwardRef } from 'react';
import { useGLTF } from '@react-three/drei'
import { useCylinder } from '@react-three/cannon';



const Wheel = forwardRef(({ radius = 0.7, leftSide, ...props }, ref) => {
  const { nodes, materials } = useGLTF('/car/wheel.gltf');
  useCylinder(() => ({ mass: 1, type: 'Kinematic', material: 'wheel', collisionFilterGroup: 0, args: [radius, radius, 0.5, 16], ...props }), ref);

  return (
    <group  ref={ref} {...props} dispose={null}>
    <mesh rotation={[0, 0, ((leftSide ? 1 : -1) * Math.PI) / 2]}>
    <mesh geometry={nodes.Lamborghini_Aventador_Wheel_FL.geometry} material={materials['_Lamborghini_AventadorLamborghini_Aventador_BodySG.002']} position={[0, 0, 2.761]} scale={0.081} />
    </mesh>
    </group>
  );
});

useGLTF.preload('/car/wheel.gltf')

export default Wheel;
